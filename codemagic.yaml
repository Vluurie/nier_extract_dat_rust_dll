workflows:
  rust_pipeline_linux:
    name: Rust CI/CD Pipeline in Linux Container
    triggering:
      events:
        - push
        - pull_request
    environment:
      vars:
        RUST_VERSION: "stable"
    scripts:
      - name: Install Docker
        script: |
          set -e
          echo "Installing Docker on macOS..."
          brew install --cask docker || { echo "Failed to install Docker"; exit 1; }
          open /Applications/Docker.app || { echo "Failed to start Docker"; exit 1; }

          echo "Waiting for Docker to start..."
          timeout=120  # Set a timeout of 120 seconds (2 minutes)
          elapsed=0
          while ! docker system info > /dev/null 2>&1; do
            if [[ "$elapsed" -ge "$timeout" ]]; then
              echo "Docker did not start within $timeout seconds"
              exit 1
            fi
            echo "Docker is not ready yet, retrying in 5 seconds..."
            sleep 5
            elapsed=$((elapsed + 5))
          done
          echo "Docker is ready."

      - name: Build and Test in Linux Container
        script: |
          set -e
          echo "Building and testing the project inside a Linux container..."
          docker run --rm -v "$(pwd)":/workspace -w /workspace rust:latest /bin/bash -c "
            rustup update $RUST_VERSION &&
            cargo build --release &&
            cargo test --release
          " || { echo "Build or tests failed in Linux container"; exit 1; }
      - name: Collect Artifacts
        script: |
          echo "Copying build artifacts..."
          mkdir -p artifacts
          cp target/release/*.so artifacts/ || { echo "No .so files found"; exit 1; }
    artifacts:
      - artifacts/*.so
